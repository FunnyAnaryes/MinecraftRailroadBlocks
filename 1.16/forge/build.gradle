plugins {
	id 'com.gradleup.shadow'
}

loom {
	forge {
		//mixinConfig "railroadblocksaddon.mixins.json"
	}
}

architectury {
    platformSetupLoomIde()
    forge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }

}

dependencies {
    forge "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

	// Architectury API. This is optional, and you can comment it out if you don't need it.
    modImplementation "me.shedaniel:architectury-forge:${rootProject.architectury_api_version}"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionForge')
}

processResources {
    filesMatching("META-INF/mods.toml") {
        expand  architectury_version_range: architectury_api_version_range_toml,
		        java: java_version,
		        minecraft_version: minecraft_version,
		        minecraft_version_range: minecraft_version_range_toml,
		        forge_version: forge_version,
		        forge_version_range: forge_version_range,
		        mod_id: mod_id,
		        mod_name: mod_name,
		        authors: mod_authors,
		        credits: mod_credits,
		        description: mod_description,
		        icon: icon_toml,
		        license: license,
		        version: mod_version,
		        issues: issues,
		        homepage: homepage,
		        update: update
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    inputFile.set shadowJar.archiveFile
}
