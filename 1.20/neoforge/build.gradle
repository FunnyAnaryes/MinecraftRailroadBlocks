plugins {
	id 'com.gradleup.shadow'
}

architectury {
    platformSetupLoomIde()
    neoForge()
}

configurations {
    common {
        canBeResolved = true
        canBeConsumed = false
    }
    compileClasspath.extendsFrom common
    runtimeClasspath.extendsFrom common
    developmentNeoForge.extendsFrom common

    // Files in this configuration will be bundled into your mod using the Shadow plugin.
    // Don't use the `shadow` configuration from the plugin itself as it's meant for excluding files.
    shadowBundle {
        canBeResolved = true
        canBeConsumed = false
    }
}

repositories {
    maven {
        name = 'NeoForged'
        url = 'https://maven.neoforged.net/releases'
    }
}

dependencies {
    neoForge "net.neoforged:neoforge:$rootProject.neo_version"
    // Remove the next line if you don't want to depend on the API
    modImplementation "dev.architectury:architectury-neoforge:${rootProject.architectury_api_version}"

    common(project(path: ':common', configuration: 'namedElements')) { transitive false }
    shadowBundle project(path: ':common', configuration: 'transformProductionNeoForge')
}

processResources {
    filesMatching('META-INF/mods.toml') {
        expand  architectury_version_range: architectury_api_version_range_toml,
                java: java_version,
                loader_version_range: neo_loader_version_range,
                minecraft_version: minecraft_version,
                minecraft_version_range: minecraft_version_range_toml,
                neo_version: neo_version,
                neo_version_range: neo_version_range,
                mod_id: mod_id,
                mod_name: mod_name,
                authors: mod_authors,
                credits: mod_credits,
                description: mod_description,
                icon: icon,
                license: license,
                version: mod_version,
                issues: issues,
                homepage: homepage,
                update: update
    }
}

shadowJar {
    configurations = [project.configurations.shadowBundle]
    archiveClassifier = 'dev-shadow'
}

remapJar {
    inputFile.set shadowJar.archiveFile
}
